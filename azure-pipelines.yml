# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

parameters:
  - name: dockerComposeCommand
    displayName: docker-compose command
    type: string
    default: up -d
    values:
      - up -d
      - down --rmi all

  - name: environment
    displayName: environment
    type: string
    default: Development
    values:
      - Development
      - Staging


trigger:
  # - docker-compose-branch
  - none

resources:
  - repo: self

variables:
  - name: tag
    value: "$(Build.BuildId)"

  - name: http_port
    ${{ if eq( parameters['environment'], 'Development') }}:
      value: 5000
    ${{ if eq( parameters['environment'], 'Staging' ) }}:
      value: 4000
  
  - name: https_port
    ${{ if eq( parameters['environment'], 'Development') }}:
      value: 5001
    ${{ if eq( parameters['environment'], 'Staging' ) }}:
      value: 4001   
  


stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build
        pool:
          name: "dotnet-agent-pool"
        steps:
          - task: PowerShell@2
            inputs:
              targetType: "inline"
              script: |
                # Write your PowerShell commands here.
                dotnet dev-certs https -ep ./https/weatherapi.pfx -p $(password_cert)
          # - task: DockerCompose@0
          #   env:
          #     SQL_PASS: $(sql_server_sa_pass)
          #     ENVIRONMENT: ${{ parameters.environment }}
          #     PASSWORD_CERT: $(password_cert)
          #     NAME_POSTFIX: ${{ lower(parameters.environment) }}
          #     HTTP_PORT: $(http_port)
          #     HTTPS_PORT: $(https_port)
          #   inputs:
          #     dockerComposeFile: "**/docker-compose.${{ parameters.environment }}.yml"
          #     action: "Run a Docker Compose command"
          #     dockerComposeCommand: ${{ parameters.dockerComposeCommand }}

          - task: DockerCompose@0
            env:
              SQL_PASS: $(sql_server_sa_pass)
              ENVIRONMENT: ${{ parameters.environment }}
              PASSWORD_CERT: $(password_cert)
              NAME_POSTFIX: ${{ lower(parameters.environment) }}
              HTTP_PORT: $(http_port)
              HTTPS_PORT: $(https_port)
            inputs:
              dockerComposeFile: '**/docker-compose.${{ parameters.environment }}.yml'
              action: 'Run services'